{"ast":null,"code":"var _jsxFileName = \"/home/mauro/\\xC1rea de Trabalho/Atividade09/projeto09-Estilos-com-Material-UI/atv-react/src/Formulario.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Card, MuiThemeProvider } from '@material-ui/core';\nimport { Box, FormControl, Input, InputLabel, Select, Container, Grid, Paper, MenuItem, Option } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  paper: {\n    //     backgroundColor: \"blue\",\n    mx: theme.spacing(12),\n    px: theme.spacing(12),\n    mr: theme.spacing(2),\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  dir: {\n    //        backgroundColor: \"gray\",\n    mx: theme.spacing(12),\n    px: theme.spacing(12),\n    mr: theme.spacing(2),\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  table: {\n    //        backgroundColor: \"green\",\n    mt: theme.spacing(2),\n    pt: theme.spacing(2),\n    pr: theme.spacing(3),\n    minWidth: 650,\n    minWidth: 650\n  },\n  body: {\n    p: theme.spacing(1)\n  }\n});\n\nclass Formulario extends React.Component {\n  constructor() {\n    super();\n\n    this.getTempo = sigla => {\n      return {\n        'ec': 'Encoberto com Chuvas Isoladas',\n        'ci': 'Chuvas Isoladas',\n        'c': 'Chuva',\n        'in': 'Instável',\n        'pp': 'Poss. de Pancadas de Chuva',\n        'cm': 'Chuva pela Manhã',\n        'cn': 'Chuva a Noite',\n        'pt': 'Pancadas de Chuva a Tarde',\n        'pm': 'Pancadas de Chuva pela Manhã',\n        'np': 'Nublado e Pancadas de Chuva',\n        'pc': 'Pancadas de Chuva',\n        'pn': 'Parcialmente Nublado',\n        'cv': 'Chuvisco',\n        'ch': 'Chuvoso',\n        't': 'Tempestade',\n        'ps': 'Predomínio de Sol',\n        'e': 'Encoberto',\n        'n': 'Nublado',\n        'cl': 'Céu Claro',\n        'nv': 'Nevoeiro',\n        'g': 'Geada',\n        'ne': 'Neve',\n        'nd': 'Não Definido',\n        'pnt': 'Pancadas de Chuva a Noite',\n        'psc': 'Possibilidade de Chuva',\n        'pcm': 'Possibilidade de Chuva pela Manhã',\n        'pct': 'Possibilidade de Chuva a Tarde',\n        'pcn': 'Possibilidade de Chuva a Noite',\n        'npt': 'Nublado com Pancadas a Tarde',\n        'npn': 'Nublado com Pancadas a Noite',\n        'ncn': 'Nublado com Poss. de Chuva a Noite',\n        'nct': 'Nublado com Poss. de Chuva a Tarde',\n        'ncm': 'Nubl. c/ Poss. de Chuva pela Manhã',\n        'npm': 'Nublado com Pancadas pela Manhã',\n        'npp': 'Nublado com Possibilidade de Chuva',\n        'vn': 'Variação de Nebulosidade',\n        'ct': 'Chuva a Tarde',\n        'ppn': 'Poss. de Panc. de Chuva a Noite',\n        'ppt': 'Poss. de Panc. de Chuva a Tarde',\n        'ppm': 'Poss. de Panc. de Chuva pela Manhã'\n      }[sigla];\n    };\n\n    this.formatData = data => {\n      let d = data.split('-');\n      return d[2] + '/' + d[1] + '/' + d[0];\n    };\n\n    this.fetchCidades = e => {\n      this.setState({\n        nome: e.target.value\n      });\n\n      if (e.target.value.length >= 3) {\n        e.preventDefault();\n        let nome = e.target.value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n        this.setState({\n          erro: ''\n        });\n        fetch(`http://servicos.cptec.inpe.br/XML/listaCidades?city=${nome}`, {\n          method: \"GET\"\n        }, {\n          mode: 'cors',\n          method: 'GET',\n          headers: new Headers({\n            'Accept': 'application/xml',\n            'content-type': 'application/x-www-form-urlencoded',\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT',\n            'Access-Control-Allow-Headers': 'Content-Type'\n          })\n        }).then(response => response.arrayBuffer()).then(buffer => {\n          let decoder = new TextDecoder(\"iso-8859-1\");\n          return decoder.decode(buffer);\n        }).then(str => {\n          let parser = new window.DOMParser();\n          let xml = parser.parseFromString(str, \"text/xml\");\n          let cidades = xml.getElementsByTagName('cidades')[0]; // Obter a tag cidades\n\n          let ID = xml.getElementsByTagName('id')[0];\n          console.log(ID);\n          let lista = [];\n          lista.push( /*#__PURE__*/React.createElement(\"option\", {\n            key: \"-i\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 32\n            }\n          }, \"Selecione\"));\n          cidades.childNodes.forEach((obj, index) => {\n            return lista.push( /*#__PURE__*/React.createElement(\"option\", {\n              key: index,\n              value: obj.childNodes[2].childNodes[0].nodeValue,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 43\n              }\n            }, obj.childNodes[0].childNodes[0].nodeValue, \" - \", obj.childNodes[1].childNodes[0].nodeValue));\n          });\n          this.setState({\n            cidades: lista\n          });\n        }).catch(erro => console.log(erro));\n      }\n    };\n\n    this.fetchClima = e => {\n      console.log(e.target.value);\n\n      if (e.target.value !== '') {\n        fetch(`http://servicos.cptec.inpe.br/XML/cidade/${e.target.value}/previsao.xml`, {\n          method: 'GET'\n        }).then(response => response.arrayBuffer()).then(buffer => {\n          let decoder = new TextDecoder(\"iso-8859-1\");\n          return decoder.decode(buffer);\n        }).then(str => {\n          let parser = new window.DOMParser();\n          let xml = parser.parseFromString(str, \"text/xml\");\n          let cidade = xml.getElementsByTagName('nome')[0].firstChild.textContent;\n          let UF = xml.getElementsByTagName('uf')[0].firstChild.textContent;\n          let diaSearch = this.formatData(xml.getElementsByTagName('atualizacao')[0].firstChild.textContent);\n          let lista = [];\n          lista.push(cidade, \" - \", UF, \"(\", diaSearch, \")\");\n          this.setState({\n            cidade: lista\n          });\n          let dia0 = this.formatData(xml.getElementsByTagName('previsao')[0].getElementsByTagName('dia')[0].firstChild.nodeValue);\n          let cond0 = this.getTempo(xml.getElementsByTagName('previsao')[0].getElementsByTagName('tempo')[0].firstChild.nodeValue);\n          let max0 = xml.getElementsByTagName('previsao')[0].getElementsByTagName('maxima')[0].firstChild.nodeValue;\n          let min0 = xml.getElementsByTagName('previsao')[0].getElementsByTagName('minima')[0].firstChild.nodeValue;\n          let iuv0 = xml.getElementsByTagName('previsao')[0].getElementsByTagName('iuv')[0].firstChild.nodeValue;\n          let dia1 = this.formatData(xml.getElementsByTagName('previsao')[1].getElementsByTagName('dia')[0].firstChild.nodeValue);\n          let cond1 = this.getTempo(xml.getElementsByTagName('previsao')[1].getElementsByTagName('tempo')[0].firstChild.nodeValue);\n          let max1 = xml.getElementsByTagName('previsao')[1].getElementsByTagName('maxima')[0].firstChild.nodeValue;\n          let min1 = xml.getElementsByTagName('previsao')[1].getElementsByTagName('minima')[0].firstChild.nodeValue;\n          let iuv1 = xml.getElementsByTagName('previsao')[1].getElementsByTagName('iuv')[0].firstChild.nodeValue;\n          let dia2 = this.formatData(xml.getElementsByTagName('previsao')[2].getElementsByTagName('dia')[0].firstChild.nodeValue);\n          let cond2 = this.getTempo(xml.getElementsByTagName('previsao')[2].getElementsByTagName('tempo')[0].firstChild.nodeValue);\n          let max2 = xml.getElementsByTagName('previsao')[2].getElementsByTagName('maxima')[0].firstChild.nodeValue;\n          let min2 = xml.getElementsByTagName('previsao')[2].getElementsByTagName('minima')[0].firstChild.nodeValue;\n          let iuv2 = xml.getElementsByTagName('previsao')[2].getElementsByTagName('iuv')[0].firstChild.nodeValue;\n          let dia3 = this.formatData(xml.getElementsByTagName('previsao')[3].getElementsByTagName('dia')[0].firstChild.nodeValue);\n          let cond3 = this.getTempo(xml.getElementsByTagName('previsao')[3].getElementsByTagName('tempo')[0].firstChild.nodeValue);\n          let max3 = xml.getElementsByTagName('previsao')[3].getElementsByTagName('maxima')[0].firstChild.nodeValue;\n          let min3 = xml.getElementsByTagName('previsao')[3].getElementsByTagName('minima')[0].firstChild.nodeValue;\n          let iuv3 = xml.getElementsByTagName('previsao')[3].getElementsByTagName('iuv')[0].firstChild.nodeValue;\n          let lista1 = [dia0, dia1, dia2, dia3];\n          let listday = [];\n          lista1.forEach((valor, index) => {\n            listday.push( /*#__PURE__*/React.createElement(\"td\", {\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 38\n              }\n            }, valor));\n          });\n          this.setState({\n            dia: listday\n          });\n          let lista2 = [cond0, cond1, cond2, cond3];\n          let listCond = [];\n          lista2.forEach((valor, index) => {\n            listCond.push( /*#__PURE__*/React.createElement(\"td\", {\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 39\n              }\n            }, valor));\n          });\n          this.setState({\n            previsao: listCond\n          });\n          let lista3 = [max0, max1, max2, max3];\n          let listMax = [];\n          lista3.forEach((valor, index) => {\n            listMax.push( /*#__PURE__*/React.createElement(\"td\", {\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 38\n              }\n            }, valor));\n          });\n          this.setState({\n            maxima: listMax\n          });\n          let lista4 = [min0, min1, min2, min3];\n          let listMin = [];\n          lista4.forEach((valor, index) => {\n            listMin.push( /*#__PURE__*/React.createElement(\"td\", {\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 38\n              }\n            }, valor));\n          });\n          this.setState({\n            minima: listMin\n          });\n          let lista5 = [iuv0, iuv1, iuv2, iuv3];\n          let listIuv = [];\n          lista5.forEach((valor, index) => {\n            listIuv.push( /*#__PURE__*/React.createElement(\"td\", {\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 38\n              }\n            }, valor));\n            console.log(\"Minima \" + listIuv);\n          });\n          this.setState({\n            iuv: listIuv\n          });\n        }).catch(erro => console.log(erro));\n      }\n    };\n\n    this.state = {\n      nome: '',\n      cidades: '',\n      cidade: '',\n      dia: '',\n      previsao: '',\n      maxima: '',\n      minima: '',\n      iuv: '',\n      searchNodes: \"\",\n      erroMsg: ''\n    };\n  }\n\n  render() {\n    let cidades = this.state.cidades;\n    let cidade = this.state.cidade;\n    let listdia = this.state.dia;\n    let listPrevisao = this.state.previsao;\n    let listMaxima = this.state.maxima;\n    let listMinima = this.state.minima;\n    let listUV = this.state.iuv;\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      onSubmit: this.fetchCidades,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Selecione uma cidade\",\n      value: this.state.value,\n      onChange: this.fetchCidades,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, \"Cidades:\"), /*#__PURE__*/React.createElement(Select, {\n      onChange: this.fetchClima,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }, cidades))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 29\n      }\n    }, this.state.erroMsg))), /*#__PURE__*/React.createElement(Table, {\n      className: classes.table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"text-center\",\n      colSpan: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 29\n      }\n    }, cidade))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }\n    }, \"Dia\"), listdia), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 29\n      }\n    }, \"Condi\\xE7\\xF5es do tempo\"), listPrevisao), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 29\n      }\n    }, \"Temp. m\\xE1xima\"), listMaxima), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 29\n      }\n    }, \"Temp. m\\xEDnima\"), listMinima), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 29\n      }\n    }, \"\\xCDndice ultravioleta\"), listUV))));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(Formulario);","map":{"version":3,"sources":["/home/mauro/Área de Trabalho/Atividade09/projeto09-Estilos-com-Material-UI/atv-react/src/Formulario.js"],"names":["React","withStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Card","MuiThemeProvider","Box","FormControl","Input","InputLabel","Select","Container","Grid","Paper","MenuItem","Option","styles","theme","root","margin","spacing","width","paper","mx","px","mr","padding","textAlign","color","palette","text","secondary","dir","table","mt","pt","pr","minWidth","body","p","Formulario","Component","constructor","getTempo","sigla","formatData","data","d","split","fetchCidades","e","setState","nome","target","value","length","preventDefault","normalize","replace","erro","fetch","method","mode","headers","Headers","then","response","arrayBuffer","buffer","decoder","TextDecoder","decode","str","parser","window","DOMParser","xml","parseFromString","cidades","getElementsByTagName","ID","console","log","lista","push","childNodes","forEach","obj","index","nodeValue","catch","fetchClima","cidade","firstChild","textContent","UF","diaSearch","dia0","cond0","max0","min0","iuv0","dia1","cond1","max1","min1","iuv1","dia2","cond2","max2","min2","iuv2","dia3","cond3","max3","min3","iuv3","lista1","listday","valor","dia","lista2","listCond","previsao","lista3","listMax","maxima","lista4","listMin","minima","lista5","listIuv","iuv","state","searchNodes","erroMsg","render","listdia","listPrevisao","listMaxima","listMinima","listUV","classes","props","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Card, MuiThemeProvider } from '@material-ui/core';\nimport { Box, FormControl, Input, InputLabel, Select, Container, Grid, Paper, MenuItem, Option } from '@material-ui/core';\n\n\nconst styles = theme => ({\n\n    root: {\n        '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: '25ch',\n        },\n      },\n    paper: {\n   //     backgroundColor: \"blue\",\n        mx: theme.spacing(12),\n        px: theme.spacing(12),\n        mr: theme.spacing(2),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    dir: {\n//        backgroundColor: \"gray\",\n        mx: theme.spacing(12),\n        px: theme.spacing(12),\n        mr: theme.spacing(2),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    table: {\n//        backgroundColor: \"green\",\n        mt: theme.spacing(2),\n        pt: theme.spacing(2),\n        pr: theme.spacing(3),\n        minWidth: 650,\n        minWidth: 650,\n    },\n    body: {\n        p: theme.spacing(1)\n    }\n});\n\n\nclass Formulario extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            nome: '',\n            cidades: '',\n            cidade: '',\n            dia: '',\n            previsao: '',\n            maxima: '',\n            minima: '',\n            iuv: '',\n            searchNodes: \"\",\n            erroMsg: ''\n        };\n\n    }\n\n    getTempo = sigla => {\n        return {\n            'ec': 'Encoberto com Chuvas Isoladas',\n            'ci': 'Chuvas Isoladas',\n            'c': 'Chuva',\n            'in': 'Instável',\n            'pp': 'Poss. de Pancadas de Chuva',\n            'cm': 'Chuva pela Manhã',\n            'cn': 'Chuva a Noite',\n            'pt': 'Pancadas de Chuva a Tarde',\n            'pm': 'Pancadas de Chuva pela Manhã',\n            'np': 'Nublado e Pancadas de Chuva',\n            'pc': 'Pancadas de Chuva',\n            'pn': 'Parcialmente Nublado',\n            'cv': 'Chuvisco',\n            'ch': 'Chuvoso',\n            't': 'Tempestade',\n            'ps': 'Predomínio de Sol',\n            'e': 'Encoberto',\n            'n': 'Nublado',\n            'cl': 'Céu Claro',\n            'nv': 'Nevoeiro',\n            'g': 'Geada',\n            'ne': 'Neve',\n            'nd': 'Não Definido',\n            'pnt': 'Pancadas de Chuva a Noite',\n            'psc': 'Possibilidade de Chuva',\n            'pcm': 'Possibilidade de Chuva pela Manhã',\n            'pct': 'Possibilidade de Chuva a Tarde',\n            'pcn': 'Possibilidade de Chuva a Noite',\n            'npt': 'Nublado com Pancadas a Tarde',\n            'npn': 'Nublado com Pancadas a Noite',\n            'ncn': 'Nublado com Poss. de Chuva a Noite',\n            'nct': 'Nublado com Poss. de Chuva a Tarde',\n            'ncm': 'Nubl. c/ Poss. de Chuva pela Manhã',\n            'npm': 'Nublado com Pancadas pela Manhã',\n            'npp': 'Nublado com Possibilidade de Chuva',\n            'vn': 'Variação de Nebulosidade',\n            'ct': 'Chuva a Tarde',\n            'ppn': 'Poss. de Panc. de Chuva a Noite',\n            'ppt': 'Poss. de Panc. de Chuva a Tarde',\n            'ppm': 'Poss. de Panc. de Chuva pela Manhã'\n        }[sigla];\n    }\n\n    formatData = data => {\n        let d = data.split('-');\n        return d[2] + '/' + d[1] + '/' + d[0];\n    }\n\n    fetchCidades = e => {\n        this.setState({\n            nome: e.target.value\n        });\n        if (e.target.value.length >= 3) {\n            e.preventDefault();\n            let nome = e.target.value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n            this.setState({ erro: '' });\n            fetch(`http://servicos.cptec.inpe.br/XML/listaCidades?city=${nome}`, { method: \"GET\" }, {\n                mode: 'cors',\n                method: 'GET',\n                headers: new Headers({\n                    'Accept': 'application/xml',\n                    'content-type': 'application/x-www-form-urlencoded',\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET, POST, PUT',\n                    'Access-Control-Allow-Headers': 'Content-Type',\n                })\n            })\n                .then(response => response.arrayBuffer())\n                .then(buffer => {\n                    let decoder = new TextDecoder(\"iso-8859-1\");\n                    return decoder.decode(buffer);\n                })\n                .then(str => { \n                    let parser = new window.DOMParser()\n                    let xml = parser.parseFromString(str, \"text/xml\");\n                    let cidades = xml.getElementsByTagName('cidades')[0]; // Obter a tag cidades\n                    let ID = xml.getElementsByTagName('id')[0];\n                    console.log(ID);\n                    let lista = [];\n                    lista.push(<option key='-i' value='' >Selecione</option>)\n                    cidades.childNodes.forEach((obj, index) => {\n                        return lista.push(<option key={index} value={obj.childNodes[2].childNodes[0].nodeValue}>{obj.childNodes[0].childNodes[0].nodeValue} - {obj.childNodes[1].childNodes[0].nodeValue}</option>)\n                    });\n                    this.setState({ cidades: lista })\n                })\n                .catch(erro => console.log(erro));\n        }\n    }\n\n    fetchClima = e => {\n        console.log(e.target.value)\n        if (e.target.value !== '') {\n            fetch(`http://servicos.cptec.inpe.br/XML/cidade/${e.target.value}/previsao.xml`, { method: 'GET' })\n                .then(response => response.arrayBuffer())\n                .then(buffer => {\n                    let decoder = new TextDecoder(\"iso-8859-1\");\n                    return decoder.decode(buffer);\n                })\n                .then(str => {\n                    let parser = new window.DOMParser()\n                    let xml = parser.parseFromString(str, \"text/xml\");\n                    let cidade = xml.getElementsByTagName('nome')[0].firstChild.textContent;\n                    let UF = xml.getElementsByTagName('uf')[0].firstChild.textContent;\n                    let diaSearch = this.formatData(xml.getElementsByTagName('atualizacao')[0].firstChild.textContent);\n\n                    let lista = [];\n                    lista.push(cidade, \" - \", UF, \"(\", diaSearch, \")\");\n                    this.setState({ cidade: lista })\n\n                    let dia0 = this.formatData(xml.getElementsByTagName('previsao')[0].getElementsByTagName('dia')[0].firstChild.nodeValue);\n                    let cond0 = this.getTempo(xml.getElementsByTagName('previsao')[0].getElementsByTagName('tempo')[0].firstChild.nodeValue);\n                    let max0 = xml.getElementsByTagName('previsao')[0].getElementsByTagName('maxima')[0].firstChild.nodeValue;\n                    let min0 = xml.getElementsByTagName('previsao')[0].getElementsByTagName('minima')[0].firstChild.nodeValue;\n                    let iuv0 = xml.getElementsByTagName('previsao')[0].getElementsByTagName('iuv')[0].firstChild.nodeValue;                    \n\n                    let dia1 = this.formatData(xml.getElementsByTagName('previsao')[1].getElementsByTagName('dia')[0].firstChild.nodeValue);\n                    let cond1 = this.getTempo(xml.getElementsByTagName('previsao')[1].getElementsByTagName('tempo')[0].firstChild.nodeValue);\n                    let max1 = xml.getElementsByTagName('previsao')[1].getElementsByTagName('maxima')[0].firstChild.nodeValue;\n                    let min1 = xml.getElementsByTagName('previsao')[1].getElementsByTagName('minima')[0].firstChild.nodeValue;\n                    let iuv1 = xml.getElementsByTagName('previsao')[1].getElementsByTagName('iuv')[0].firstChild.nodeValue;\n\n                    let dia2 = this.formatData(xml.getElementsByTagName('previsao')[2].getElementsByTagName('dia')[0].firstChild.nodeValue);\n                    let cond2 = this.getTempo(xml.getElementsByTagName('previsao')[2].getElementsByTagName('tempo')[0].firstChild.nodeValue);\n                    let max2 = xml.getElementsByTagName('previsao')[2].getElementsByTagName('maxima')[0].firstChild.nodeValue;\n                    let min2 = xml.getElementsByTagName('previsao')[2].getElementsByTagName('minima')[0].firstChild.nodeValue;\n                    let iuv2 = xml.getElementsByTagName('previsao')[2].getElementsByTagName('iuv')[0].firstChild.nodeValue; \n\n                    let dia3 = this.formatData(xml.getElementsByTagName('previsao')[3].getElementsByTagName('dia')[0].firstChild.nodeValue);\n                    let cond3 = this.getTempo(xml.getElementsByTagName('previsao')[3].getElementsByTagName('tempo')[0].firstChild.nodeValue);\n                    let max3 = xml.getElementsByTagName('previsao')[3].getElementsByTagName('maxima')[0].firstChild.nodeValue;\n                    let min3 = xml.getElementsByTagName('previsao')[3].getElementsByTagName('minima')[0].firstChild.nodeValue;\n                    let iuv3 = xml.getElementsByTagName('previsao')[3].getElementsByTagName('iuv')[0].firstChild.nodeValue;\n\n                    let lista1 = [dia0, dia1, dia2, dia3];\n                    let listday = [];\n                    lista1.forEach((valor, index) => {\n                        listday.push(<td key={index}>{valor}</td>);\n                    });\n                    this.setState({ dia: listday })\n\n                    let lista2 = [cond0, cond1, cond2, cond3];\n                    let listCond = [];\n                    lista2.forEach((valor, index) => {\n                        listCond.push(<td key={index}>{valor}</td>);\n                    });\n                    this.setState({ previsao: listCond });\n\n                    let lista3 = [max0, max1, max2, max3];\n                    let listMax = [];\n                    lista3.forEach((valor, index) => {\n                        listMax.push(<td key={index}>{valor}</td>);\n                    });\n                    this.setState({ maxima: listMax });\n\n                    let lista4 = [min0, min1, min2, min3];\n                    let listMin = [];\n                    lista4.forEach((valor, index) => {\n                        listMin.push(<td key={index}>{valor}</td>);\n                    });\n                    this.setState({ minima: listMin });\n\n                    let lista5 = [iuv0, iuv1, iuv2, iuv3];\n                    let listIuv = [];\n                    lista5.forEach((valor, index) => {\n                        listIuv.push(<td key={index}>{valor}</td>);\n                        console.log(\"Minima \"+ listIuv);\n                    });\n                    this.setState({ iuv: listIuv});\n                })\n                .catch(erro => console.log(erro));\n        }\n    };\n\n\n\n    render() {\n        let cidades = this.state.cidades;\n        let cidade = this.state.cidade;\n        let listdia = this.state.dia;\n        let listPrevisao = this.state.previsao;\n        let listMaxima = this.state.maxima;\n        let listMinima = this.state.minima;\n        let listUV = this.state.iuv;\n\n        const { classes } = this.props;\n        return (\n            <div className={classes.body}>\n                <Container   maxWidth=\"md\">\n                    <FormControl onSubmit={this.fetchCidades} >\n                    <form className={classes.root} noValidate autoComplete=\"off\">\n                        <Input placeholder=\"Selecione uma cidade\" value={this.state.value} onChange={this.fetchCidades} />\n                    </form>\n                    <form>\n                    <label>Cidades:</label>\n                            <Select onChange={this.fetchClima} />\n                            <MenuItem value=\"\">\n            <Option>{cidades}</Option>\n          </MenuItem>            \n                                   \n                                \n                    </form>\n\n                            <div>\n                                {this.state.erroMsg}\n                            </div>\n\n                    </FormControl>\n                </Container>\n                <Table className={classes.table}>\n                    <TableHead>\n                        <TableRow>\n                            <th className=\"text-center\" colSpan=\"5\">\n                                {cidade}\n                            </th>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <th>Dia</th>\n                            {listdia}\n                        </TableRow>\n                        <TableRow>\n                            <th>Condições do tempo</th>\n                            {listPrevisao}\n                        </TableRow>\n                        <TableRow>\n                            <th>Temp. máxima</th>\n                            {listMaxima}\n                        </TableRow>\n                        <TableRow>\n                            <th>Temp. mínima</th>\n                            {listMinima}\n                        </TableRow>\n                        <TableRow>\n                            <th>Índice ultravioleta</th>\n                            {listUV}\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }\n\n}\n\nexport default withStyles(styles, { withTheme: true })(Formulario);\n\n"]},"metadata":{},"sourceType":"module"}