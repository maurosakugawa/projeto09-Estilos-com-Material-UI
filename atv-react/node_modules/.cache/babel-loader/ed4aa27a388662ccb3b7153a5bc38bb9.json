{"ast":null,"code":"var _jsxFileName = \"/home/mauro/\\xC1rea de Trabalho/Atividade09/projeto09-Estilos-com-Material-UI/atv-react/src/Formulario.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Card, MuiThemeProvider } from '@material-ui/core';\nimport { Box, FormControl, Input, InputLabel, Select, Container, Grid, Paper } from '@material-ui/core';\nimport { getTempo } from './getTempo';\n\nconst styles = theme => ({\n  /*  table: {\n      minWidth: 650,\n    },\n    root: {\n        backgroundColor: \"red\",\n        display:'flex',\n        flexGrow: 1,\n    } */\n  root: {\n    backgroundColor: \"red\",\n    mt: theme.spacing(2),\n    pt: theme.spacing(2),\n    pr: theme.spacing(3),\n    mx: 0,\n    px: 0,\n    flexGrow: 1,\n    minHeight: 80,\n    display: 'block'\n  },\n  paper: {\n    mx: theme.spacing(12),\n    px: theme.spacing(12),\n    mr: theme.spacing(12),\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  body: {\n    p: theme.spacing(1)\n  }\n});\n\nclass Formulario extends React.Component {\n  constructor() {\n    super();\n\n    this.formatData = data => {\n      let d = data.split('-');\n      return d[2] + '/' + d[1] + '/' + d[0];\n    };\n\n    this.fetchCidades = e => {\n      this.setState({\n        nome: e.target.value\n      });\n\n      if (e.target.value.length >= 3) {\n        e.preventDefault();\n        let nome = e.target.value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n        this.setState({\n          erro: ''\n        });\n        fetch(`http://servicos.cptec.inpe.br/XML/listaCidades?city=${nome}`, {\n          method: \"GET\"\n        }, {\n          mode: 'cors',\n          method: 'GET',\n          headers: new Headers({\n            'Accept': 'application/xml',\n            'content-type': 'application/x-www-form-urlencoded',\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT',\n            'Access-Control-Allow-Headers': 'Content-Type'\n          })\n        }).then(response => response.arrayBuffer()).then(buffer => {\n          let decoder = new TextDecoder(\"iso-8859-1\");\n          return decoder.decode(buffer);\n        }).then(str => {\n          // console.log(str);\n          let parser = new window.DOMParser();\n          let xml = parser.parseFromString(str, \"text/xml\");\n          let cidades = xml.getElementsByTagName('cidades')[0]; // Obter a tag cidades\n\n          let ID = xml.getElementsByTagName('id')[0];\n          console.log(ID);\n          let lista = [];\n          lista.push( /*#__PURE__*/React.createElement(\"option\", {\n            key: \"-i\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 32\n            }\n          }, \"Selecione\"));\n          cidades.childNodes.forEach((obj, index) => {\n            return lista.push( /*#__PURE__*/React.createElement(\"option\", {\n              key: index,\n              value: obj.childNodes[2].childNodes[0].nodeValue,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 43\n              }\n            }, obj.childNodes[0].childNodes[0].nodeValue, \" - \", obj.childNodes[1].childNodes[0].nodeValue));\n          });\n          this.setState({\n            cidades: lista\n          });\n        }).catch(erro => console.log(erro));\n      }\n    };\n\n    this.fetchClima = e => {\n      console.log(e.target.value);\n\n      if (e.target.value !== '') {\n        fetch(`http://servicos.cptec.inpe.br/XML/cidade/${e.target.value}/previsao.xml`, {\n          method: 'GET'\n        }).then(response => response.arrayBuffer()).then(buffer => {\n          let decoder = new TextDecoder(\"iso-8859-1\");\n          return decoder.decode(buffer);\n        }).then(str => {\n          // console.log(str);\n          let parser = new window.DOMParser();\n          let xml = parser.parseFromString(str, \"text/xml\"); //                     console.log(xml);\n\n          let cidade = xml.getElementsByTagName('nome')[0].firstChild.textContent; //                 console.log(\"cidade \"+cidade);\n\n          let UF = xml.getElementsByTagName('uf')[0].firstChild.textContent; //                  console.log(\"UF \"+ UF);\n\n          let diaSearch = this.formatData(xml.getElementsByTagName('atualizacao')[0].firstChild.textContent); //                 console.log(\"Dia \"+ diaSearch);\n\n          let lista = [];\n          lista.push(cidade, \" - \", UF, \"(\", diaSearch, \")\");\n          this.setState({\n            cidade: lista\n          });\n          let dia0 = this.formatData(xml.getElementsByTagName('previsao')[0].getElementsByTagName('dia')[0].firstChild.nodeValue); //                console.log(\"Hoje \"+ dia0);\n\n          let cond0 = this.getTempo(xml.getElementsByTagName('previsao')[0].getElementsByTagName('tempo')[0].firstChild.nodeValue); //                console.log(\"condhoje \"+ cond0);\n\n          let max0 = xml.getElementsByTagName('previsao')[0].getElementsByTagName('maxima')[0].firstChild.nodeValue; //                console.log(\"max \"+ max0);\n\n          let min0 = xml.getElementsByTagName('previsao')[0].getElementsByTagName('minima')[0].firstChild.nodeValue; //               console.log(\"min \"+ min0);   \n\n          let iuv0 = xml.getElementsByTagName('previsao')[0].getElementsByTagName('iuv')[0].firstChild.nodeValue; //               console.log(\"iuv \"+ iuv0);                       \n\n          let dia1 = this.formatData(xml.getElementsByTagName('previsao')[1].getElementsByTagName('dia')[0].firstChild.nodeValue); //               console.log(\"amanhã \"+ dia1);\n\n          let cond1 = this.getTempo(xml.getElementsByTagName('previsao')[1].getElementsByTagName('tempo')[0].firstChild.nodeValue); //               console.log(\"condAmanhã \"+ cond1);\n\n          let max1 = xml.getElementsByTagName('previsao')[1].getElementsByTagName('maxima')[0].firstChild.nodeValue; //            console.log(\"max \"+ max1);\n\n          let min1 = xml.getElementsByTagName('previsao')[1].getElementsByTagName('minima')[0].firstChild.nodeValue; // /    /     console.log(\"min \"+ min1);   \n\n          let iuv1 = xml.getElementsByTagName('previsao')[1].getElementsByTagName('iuv')[0].firstChild.nodeValue; //            console.log(\"iuv \"+ iuv1);   \n\n          let dia2 = this.formatData(xml.getElementsByTagName('previsao')[2].getElementsByTagName('dia')[0].firstChild.nodeValue);\n          let cond2 = this.getTempo(xml.getElementsByTagName('previsao')[2].getElementsByTagName('tempo')[0].firstChild.nodeValue); //            console.log(\"condDia2 \"+ cond2);\n\n          let max2 = xml.getElementsByTagName('previsao')[2].getElementsByTagName('maxima')[0].firstChild.nodeValue; //            console.log(\"max \"+ max2);\n\n          let min2 = xml.getElementsByTagName('previsao')[2].getElementsByTagName('minima')[0].firstChild.nodeValue; //            console.log(\"min \"+ min2);   \n\n          let iuv2 = xml.getElementsByTagName('previsao')[2].getElementsByTagName('iuv')[0].firstChild.nodeValue; //           console.log(\"iuv \"+ iuv2);   \n\n          let dia3 = this.formatData(xml.getElementsByTagName('previsao')[3].getElementsByTagName('dia')[0].firstChild.nodeValue);\n          let cond3 = this.getTempo(xml.getElementsByTagName('previsao')[3].getElementsByTagName('tempo')[0].firstChild.nodeValue);\n          let max3 = xml.getElementsByTagName('previsao')[3].getElementsByTagName('maxima')[0].firstChild.nodeValue;\n          let min3 = xml.getElementsByTagName('previsao')[3].getElementsByTagName('minima')[0].firstChild.nodeValue;\n          let iuv3 = xml.getElementsByTagName('previsao')[3].getElementsByTagName('iuv')[0].firstChild.nodeValue;\n          let lista1 = [dia0, dia1, dia2, dia3];\n          let listday = [];\n          lista1.forEach((valor, index) => {\n            listday.push( /*#__PURE__*/React.createElement(\"td\", {\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 38\n              }\n            }, valor));\n            console.log(\"Dias \");\n          });\n          this.setState({\n            dia: listday\n          });\n          let lista2 = [cond0, cond1, cond2, cond3];\n          let listCond = [];\n          lista2.forEach((valor, index) => {\n            listCond.push( /*#__PURE__*/React.createElement(\"td\", {\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 39\n              }\n            }, valor));\n          });\n          this.setState({\n            previsao: listCond\n          });\n          let lista3 = [max0, max1, max2, max3];\n          let listMax = [];\n          lista3.forEach((valor, index) => {\n            listMax.push( /*#__PURE__*/React.createElement(\"td\", {\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 38\n              }\n            }, valor));\n          });\n          this.setState({\n            maxima: listMax\n          });\n          let lista4 = [min0, min1, min2, min3];\n          let listMin = [];\n          lista4.forEach((valor, index) => {\n            listMin.push( /*#__PURE__*/React.createElement(\"td\", {\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 38\n              }\n            }, valor));\n          });\n          this.setState({\n            minima: listMin\n          });\n          let lista5 = [iuv0, iuv1, iuv2, iuv3];\n          let listIuv = [];\n          lista5.forEach((valor, index) => {\n            listIuv.push( /*#__PURE__*/React.createElement(\"td\", {\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 38\n              }\n            }, valor));\n          });\n          this.setState({\n            iuv: lista5\n          });\n        }).catch(erro => console.log(erro));\n      }\n    };\n\n    this.state = {\n      nome: '',\n      cidades: '',\n      cidade: '',\n      dia: '',\n      previsao: '',\n      maxima: '',\n      minima: '',\n      iuv: '',\n      searchNodes: \"\",\n      erroMsg: ''\n    };\n  }\n\n  render() {\n    let cidades = this.state.cidades;\n    let cidade = this.state.cidade;\n    let listdia = this.state.dia;\n    let listPrevisao = this.state.previsao;\n    let listMaxima = this.state.maxima;\n    let listMinima = this.state.minima;\n    let listUV = this.state.iuv;\n    console.log({\n      listUV\n    });\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      onSubmit: this.fetchCidades,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    }, \"Nome:\", /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.fetchCidades,\n      placeholder: \"digite o nome completo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, \"Cidades:\", /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.fetchClima,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 29\n      }\n    }, cidades))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, this.state.erroMsg)))), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"text-center\",\n      colSpan: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 33\n      }\n    }, cidade))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 33\n      }\n    }, \"Dia\"), listdia), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 33\n      }\n    }, \"Condi\\xE7\\xF5es do tempo\"), listPrevisao), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 33\n      }\n    }, \"Temp. m\\xE1xima\"), listMaxima), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 33\n      }\n    }, \"Temp. m\\xEDnima\"), listMinima), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 33\n      }\n    }, \"\\xCDndice ultravioleta\"), listUV))));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(Formulario);\n/*\n                    <div>\n                        <InputLabel>Cidades:\n                            <Select onChange={this.fetchClima}>\n                                {cidades}\n                            </Select>\n                        </InputLabel>\n                    </div>\n                   \n         //////////////////////////////////////\n                        <thead>\n                            <tr>\n                                <th className=\"text-center\" colSpan=\"5\">\n                                    {cidade}\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th>Dia</th>\n                                {listdia}\n                            </tr>\n                            <tr>\n                                <th>Condições do tempo</th>                                \n                                {listPrevisao}\n                            </tr>\n                            <tr>\n                                <th>Temp. máxima</th>                                \n                                {listMaxima}\n                            </tr>\n                            <tr>\n                                <th>Temp. mínima</th>                                \n                                {listMinima}\n                            </tr>\n                            <tr>\n                                <th>Índice ultravioleta</th>                                \n                                {listUV}\n                            </tr>\n                        </tbody>                   \n                   \n                   \n                    */","map":{"version":3,"sources":["/home/mauro/Área de Trabalho/Atividade09/projeto09-Estilos-com-Material-UI/atv-react/src/Formulario.js"],"names":["React","withStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Card","MuiThemeProvider","Box","FormControl","Input","InputLabel","Select","Container","Grid","Paper","getTempo","styles","theme","root","backgroundColor","mt","spacing","pt","pr","mx","px","flexGrow","minHeight","display","paper","mr","padding","textAlign","color","palette","text","secondary","body","p","Formulario","Component","constructor","formatData","data","d","split","fetchCidades","e","setState","nome","target","value","length","preventDefault","normalize","replace","erro","fetch","method","mode","headers","Headers","then","response","arrayBuffer","buffer","decoder","TextDecoder","decode","str","parser","window","DOMParser","xml","parseFromString","cidades","getElementsByTagName","ID","console","log","lista","push","childNodes","forEach","obj","index","nodeValue","catch","fetchClima","cidade","firstChild","textContent","UF","diaSearch","dia0","cond0","max0","min0","iuv0","dia1","cond1","max1","min1","iuv1","dia2","cond2","max2","min2","iuv2","dia3","cond3","max3","min3","iuv3","lista1","listday","valor","dia","lista2","listCond","previsao","lista3","listMax","maxima","lista4","listMin","minima","lista5","listIuv","iuv","state","searchNodes","erroMsg","render","listdia","listPrevisao","listMaxima","listMinima","listUV","classes","props","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Card, MuiThemeProvider } from '@material-ui/core';\nimport { Box, FormControl, Input, InputLabel, Select, Container, Grid, Paper } from '@material-ui/core';\nimport { getTempo } from './getTempo';\n\nconst styles = theme => ({    \n  /*  table: {\n      minWidth: 650,\n    },\n    root: {\n        backgroundColor: \"red\",\n        display:'flex',\n        flexGrow: 1,\n    } */\n    root: {\n        backgroundColor: \"red\",\n        mt: theme.spacing(2),\n        pt: theme.spacing(2),\n        pr: theme.spacing(3),\n        mx:0,\n        px: 0,\n        flexGrow: 1,\n        minHeight:80,\n        display: 'block'\n      },\n      paper: {\n        mx: theme.spacing(12),\n        px: theme.spacing(12),\n        mr: theme.spacing(12),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      body: {\n          p: theme.spacing(1)\n      }\n});\n\n\nclass Formulario extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            nome: '',\n            cidades: '',\n            cidade: '',\n            dia: '',\n            previsao: '',\n            maxima: '',\n            minima: '',\n            iuv: '',\n            searchNodes: \"\",\n            erroMsg: ''\n        };\n\n    }\n\n    formatData = data => {\n        let d = data.split('-');\n        return d[2] + '/' + d[1] + '/' + d[0];\n    }\n\n    fetchCidades = e => {\n        this.setState({\n            nome: e.target.value\n        });\n        if (e.target.value.length >= 3) {\n            e.preventDefault();\n            let nome = e.target.value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n            this.setState({ erro: '' });\n            fetch(`http://servicos.cptec.inpe.br/XML/listaCidades?city=${nome}`, { method: \"GET\" }, {\n                mode: 'cors',\n                method: 'GET',\n                headers: new Headers({\n                    'Accept': 'application/xml',\n                    'content-type': 'application/x-www-form-urlencoded',\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET, POST, PUT',\n                    'Access-Control-Allow-Headers': 'Content-Type',\n                })\n            })\n                .then(response => response.arrayBuffer())\n                .then(buffer => {\n                    let decoder = new TextDecoder(\"iso-8859-1\");\n                    return decoder.decode(buffer);\n                })\n                .then(str => { // console.log(str);\n                    let parser = new window.DOMParser()\n                    let xml = parser.parseFromString(str, \"text/xml\");\n                    let cidades = xml.getElementsByTagName('cidades')[0]; // Obter a tag cidades\n                    let ID = xml.getElementsByTagName('id')[0];\n                    console.log(ID);\n                    let lista = [];\n                    lista.push(<option key='-i' value='' >Selecione</option>)\n                    cidades.childNodes.forEach((obj, index) => {\n                        return lista.push(<option key={index} value={obj.childNodes[2].childNodes[0].nodeValue}>{obj.childNodes[0].childNodes[0].nodeValue} - {obj.childNodes[1].childNodes[0].nodeValue}</option>)\n                    });\n                    this.setState({ cidades: lista })\n                })\n                .catch(erro => console.log(erro));\n        }\n    }\n\n    fetchClima = e => { console.log(e.target.value)\n        if (e.target.value !== '') {\n            fetch(`http://servicos.cptec.inpe.br/XML/cidade/${e.target.value}/previsao.xml`, { method: 'GET' })\n                .then(response => response.arrayBuffer())\n                .then(buffer => {\n                    let decoder = new TextDecoder(\"iso-8859-1\");\n                    return decoder.decode(buffer);\n                })\n                .then(str => { // console.log(str);\n                    let parser = new window.DOMParser()\n                    let xml = parser.parseFromString(str, \"text/xml\");\n//                     console.log(xml);\n                    let cidade = xml.getElementsByTagName('nome')[0].firstChild.textContent;\n   //                 console.log(\"cidade \"+cidade);\n                    let UF = xml.getElementsByTagName('uf')[0].firstChild.textContent;\n  //                  console.log(\"UF \"+ UF);\n                    let diaSearch = this.formatData(xml.getElementsByTagName('atualizacao')[0].firstChild.textContent);\n   //                 console.log(\"Dia \"+ diaSearch);\n                                        \n                    let lista = [];\n                    lista.push(cidade,\" - \", UF, \"(\", diaSearch, \")\");\n                    this.setState({cidade: lista})\n                    \n                    let dia0 = this.formatData(xml.getElementsByTagName('previsao')[0].getElementsByTagName('dia')[0].firstChild.nodeValue);\n    //                console.log(\"Hoje \"+ dia0);\n                    let cond0 = this.getTempo(xml.getElementsByTagName('previsao')[0].getElementsByTagName('tempo')[0].firstChild.nodeValue);\n    //                console.log(\"condhoje \"+ cond0);\n                    let max0 = xml.getElementsByTagName('previsao')[0].getElementsByTagName('maxima')[0].firstChild.nodeValue;\n    //                console.log(\"max \"+ max0);\n                    let min0 = xml.getElementsByTagName('previsao')[0].getElementsByTagName('minima')[0].firstChild.nodeValue;\n     //               console.log(\"min \"+ min0);   \n                    let iuv0 = xml.getElementsByTagName('previsao')[0].getElementsByTagName('iuv')[0].firstChild.nodeValue;\n     //               console.log(\"iuv \"+ iuv0);                       \n                    \n                    let dia1 = this.formatData(xml.getElementsByTagName('previsao')[1].getElementsByTagName('dia')[0].firstChild.nodeValue);\n     //               console.log(\"amanhã \"+ dia1);\n                    let cond1 = this.getTempo(xml.getElementsByTagName('previsao')[1].getElementsByTagName('tempo')[0].firstChild.nodeValue);\n     //               console.log(\"condAmanhã \"+ cond1);\n                    let max1 = xml.getElementsByTagName('previsao')[1].getElementsByTagName('maxima')[0].firstChild.nodeValue;\n        //            console.log(\"max \"+ max1);\n                    let min1 = xml.getElementsByTagName('previsao')[1].getElementsByTagName('minima')[0].firstChild.nodeValue;\n          // /    /     console.log(\"min \"+ min1);   \n                    let iuv1 = xml.getElementsByTagName('previsao')[1].getElementsByTagName('iuv')[0].firstChild.nodeValue;\n        //            console.log(\"iuv \"+ iuv1);   \n                    \n                    let dia2 = this.formatData(xml.getElementsByTagName('previsao')[2].getElementsByTagName('dia')[0].firstChild.nodeValue);\n                    let cond2 = this.getTempo(xml.getElementsByTagName('previsao')[2].getElementsByTagName('tempo')[0].firstChild.nodeValue);\n        //            console.log(\"condDia2 \"+ cond2);\n                    let max2 = xml.getElementsByTagName('previsao')[2].getElementsByTagName('maxima')[0].firstChild.nodeValue;\n        //            console.log(\"max \"+ max2);\n                    let min2 = xml.getElementsByTagName('previsao')[2].getElementsByTagName('minima')[0].firstChild.nodeValue;\n        //            console.log(\"min \"+ min2);   \n                    let iuv2 = xml.getElementsByTagName('previsao')[2].getElementsByTagName('iuv')[0].firstChild.nodeValue;\n         //           console.log(\"iuv \"+ iuv2);   \n                    \n                    let dia3 = this.formatData(xml.getElementsByTagName('previsao')[3].getElementsByTagName('dia')[0].firstChild.nodeValue);\n                    let cond3 = this.getTempo(xml.getElementsByTagName('previsao')[3].getElementsByTagName('tempo')[0].firstChild.nodeValue);\n                    let max3 = xml.getElementsByTagName('previsao')[3].getElementsByTagName('maxima')[0].firstChild.nodeValue;\n                    let min3 = xml.getElementsByTagName('previsao')[3].getElementsByTagName('minima')[0].firstChild.nodeValue;\n                    let iuv3 = xml.getElementsByTagName('previsao')[3].getElementsByTagName('iuv')[0].firstChild.nodeValue;            \n\n                    let lista1 = [dia0, dia1, dia2, dia3];\n                    let listday = [];\n                    lista1.forEach((valor, index) => {\n                        listday.push(<td key={index}>{valor}</td>);\n                        console.log(\"Dias \");  \n                    });\n                    this.setState({dia: listday})                 \n                    let lista2 = [cond0,cond1,cond2,cond3];\n                    let listCond = [];\n                    lista2.forEach((valor, index) => {\n                        listCond.push(<td key={index}>{valor}</td>);\n                    });\n                    this.setState({previsao: listCond});\n                    \n                    let lista3 = [max0,max1,max2,max3];\n                    let listMax = [];\n                    lista3.forEach((valor, index) => {\n                        listMax.push(<td key={index}>{valor}</td>);\n                    });\n                    this.setState({maxima: listMax});\n\n                    let lista4 = [min0,min1,min2,min3];\n                    let listMin = [];\n                    lista4.forEach((valor, index) => {\n                        listMin.push(<td key={index}>{valor}</td>);\n                    });\n                    this.setState({minima: listMin}); \n\n                    let lista5 = [iuv0,iuv1,iuv2,iuv3];\n                    let listIuv = [];\n                    lista5.forEach((valor, index) => {\n                        listIuv.push(<td key={index}>{valor}</td>);\n                    });\n                    this.setState({iuv: lista5}); \n                })\n                .catch(erro => console.log(erro));\n        }\n    };\n\n    \n\n    render() {\n        let cidades = this.state.cidades;\n\n        let cidade = this.state.cidade;\n        let listdia = this.state.dia;\n        let listPrevisao = this.state.previsao;\n        let listMaxima = this.state.maxima;\n        let listMinima = this.state.minima;\n        let listUV = this.state.iuv;\n        console.log({listUV})\n        const { classes } = this.props; \n        return (\n            <div className={classes.body}>\n                <Card className={classes.root}>\n                <FormControl onSubmit={this.fetchCidades} >\n                    <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <InputLabel>Nome:\n                            <Input type='text' value={this.state.value}\n                                onChange={this.fetchCidades}\n                                placeholder=\"digite o nome completo\"\n                            />\n                        </InputLabel>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                        <label>Cidades:\n                            <select onChange={this.fetchClima}>\n                                {cidades}\n                            </select>\n                        </label>\n                    </Grid>\n                    <div>\n                        {this.state.erroMsg}\n                    </div>\n                    </Grid>\n                </FormControl>\n                </Card>\n                <Table>\n                    <TableHead>\n                            <tr>\n                                <th className=\"text-center\" colSpan=\"5\">\n                                    {cidade}\n                                </th>\n                            </tr>\n                        </TableHead>\n                        <tbody>\n                            <tr>\n                                <th>Dia</th>\n                                {listdia}\n                            </tr>\n                            <tr>\n                                <th>Condições do tempo</th>                                \n                                {listPrevisao}\n                            </tr>\n                            <tr>\n                                <th>Temp. máxima</th>                                \n                                {listMaxima}\n                            </tr>\n                            <tr>\n                                <th>Temp. mínima</th>                                \n                                {listMinima}\n                            </tr>\n                            <tr>\n                                <th>Índice ultravioleta</th>                                \n                                {listUV}\n                            </tr>\n                        </tbody>       \n                    </Table>\n            </div>\n        );\n    }\n\n}\n\nexport default withStyles(styles, { withTheme: true })(Formulario);\n/*\n                    <div>\n                        <InputLabel>Cidades:\n                            <Select onChange={this.fetchClima}>\n                                {cidades}\n                            </Select>\n                        </InputLabel>\n                    </div>\n                   \n         //////////////////////////////////////\n                        <thead>\n                            <tr>\n                                <th className=\"text-center\" colSpan=\"5\">\n                                    {cidade}\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th>Dia</th>\n                                {listdia}\n                            </tr>\n                            <tr>\n                                <th>Condições do tempo</th>                                \n                                {listPrevisao}\n                            </tr>\n                            <tr>\n                                <th>Temp. máxima</th>                                \n                                {listMaxima}\n                            </tr>\n                            <tr>\n                                <th>Temp. mínima</th>                                \n                                {listMinima}\n                            </tr>\n                            <tr>\n                                <th>Índice ultravioleta</th>                                \n                                {listUV}\n                            </tr>\n                        </tbody>                   \n                   \n                   \n                    */\n                                      "]},"metadata":{},"sourceType":"module"}